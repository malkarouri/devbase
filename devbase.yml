---
- hosts: all
  become: yes
  gather_facts: false
  tasks:
  - name: Install packages for Ansible support
    raw: dnf -y -e0 -d0 install python python-dnf libselinux-python

- hosts: all
  become: yes
  gather_facts: true
  tasks:
  - name: Update all packages
    dnf: name=* state=latest
  - name: Ensuring certain packages
    dnf: name={{ item }} state=present
    with_items:
    - zlib-devel
    - git
    - zsh
    - tmux
    - ruby
    - rubygems
    - emacs
    - emacs-w3m
    - python-setuptools
    - python-pip
    - python-wheel
    - redhat-rpm-config
    - python-devel
    - python-tox
    - python-sphinx
    - jenkins
    - the_silver_searcher
    - python-pygments
    - docker
    - docker-compose
    - haproxy
    - jq
    - tree
    - libjpeg-turbo-devel
  - name: Enable Jenkins
    service: name=jenkins enabled=yes state=started
  - name: Enable Docker
    service: name=docker enabled=yes state=started
  roles:
    - rkt

- hosts: all
  become: yes
  tasks:
  - name: Set default shell
    user: name=vagrant shell=/bin/zsh groups=dockerroot append=yes

- hosts: all
  tasks:
  - name: Install antigen
    git: repo=https://github.com/zsh-users/antigen.git dest="{{ ansible_env.HOME }}/config/antigen"
  - name: Install homesick
    gem: name=homesick state=latest
  - name: Check if dotfiles already cloned
    shell: homesick status dotfiles
    register: result
    ignore_errors: true
    changed_when: "result.rc != 0"
  - name: Configure castle
    shell: homesick clone malkarouri/dotfiles
    when: result|failed
  - name: Link castle files
    shell: homesick symlink dotfiles
  - name: Install nix
    shell: curl https://nixos.org/nix/install | sh creates=/nix

- hosts: all
  become: yes
  tasks:
  - name: Consul
    docker:
      name: consul
      image: gliderlabs/consul-server
      net: host
      command: -bootstrap -advertise=127.0.0.1 -ui
      state: started
  - name: Registrator
    docker:
      name: registrator
      image: gliderlabs/registrator:latest
      net: host
      command: consul://localhost:8500
      volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      state: started
  - name: Redis Container
    docker:
      name: redis
      image: redis
      command: redis-server --appendonly yes
      state: started
      publish_all_ports: yes
